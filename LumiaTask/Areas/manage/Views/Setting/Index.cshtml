@using LumiaTask.Helpers
@model PaginatedList<Setting>
@{
    int counter = 0;
}
<table class="table">
    <thead>
        <tr>
            <th>
                Count
            </th>
            <th>
                Keys
            </th>
            <th>
                Values
            </th>
            <th>
                Action
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
                counter++;
            <tr>
                <th scope="row">@counter</th>
                <td style="font-weight:bold">@item.Key</td>
                <td>@item.Value</td>
                <td><a asp-action="update" asp-controller="setting" asp-route-id="@item.Id" class="btn btn-primary">Update</a></td>
            </tr>
        }
        <tr>
        </tr>
        <tr>
        </tr>
    </tbody>
</table>
<div style="margin-left:500px">
    <form>
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                @if (Model.HasPrevious)
                {
                    <li class="page-item"><a class="page-link" asp-action="index" asp-route-page="@(Model.ActivePage-1)">Previous</a></li>
                }
                @for (int i = 1; i <= Model.TotalPageCount; i++)
                {
                    <li class="page-item @((Model.ActivePage==i)? "active" : "")"><a class="page-link" asp-route-page="@i">@i</a></li>
                }

                @if (Model.HasNext)
                {
                    <li class="page-item"><a class="page-link" asp-action="index" asp-route-page="@(Model.ActivePage+1)">Next</a></li>
                }
            </ul>
        </nav>
    </form>
</div>